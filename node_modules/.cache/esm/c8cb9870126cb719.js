let mongoose;_126‍.x([["default",()=>_126‍.o]]);_126‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);

const { ObjectId } = mongoose.Schema;
const lessonSchema = new mongoose.Schema(
  {
    title: {
      type: String,
      trim: true,
      minlength: 3,
      maxlength: 320,
      required: true,
    },
    slug: { type: String, lowercase: true },
    content: { type: {}, minlength: 200 },
    video_link: {},
    free_preview: { type: Boolean, default: false },
  },
  { timestamps: true }
);
const courseSchema = new mongoose.Schema(
  {
    name: {
      type: String,
      trim: true,
      minlength: 3,
      maxlength: 320,
      required: true,
    },
    slug: { type: String, lowercase: true },
    description: { type: {}, minlength: 200, required: true },
    price: { type: Number, default: 9.99 },
    image: {},
    category: { type: String },
    published: { type: Boolean, default: false },
    paid: { type: Boolean, default: true },
    instructor: { type: ObjectId, ref: "User", required: false },
    lessons: [lessonSchema],
  },
  { timestamps: true }
);

_126‍.d(mongoose.model("Course", courseSchema));
